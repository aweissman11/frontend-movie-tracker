// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginForm should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginForm
    displaySignUp={[MockFunction]}
    logUserIn={[MockFunction]}
    showLogin=""
    store={
      Object {
        "dispatch": undefined,
        "getState": undefined,
        "subscribe": undefined,
      }
    }
    user={
      Object {
        "id": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          <span>
            movie
          </span>
          Tracker
        </h1>,
        <h4>
          for the love of film
        </h4>,
        <div
          className="login-form-logo-wrapper"
        >
          <Logo />
        </div>,
        <input
          className="email-input"
          name="email"
          onChange={[Function]}
          placeholder="email"
          value=""
        />,
        <img
          alt="mail"
          className="email-icon"
          src="./email.png"
        />,
        <input
          className="password-input"
          name="password"
          onChange={[Function]}
          placeholder="password"
          type="password"
          value=""
        />,
        <img
          alt="lock"
          className="password-icon"
          src="./password.png"
        />,
        <input
          className="login-submit"
          type="submit"
          value="login"
        />,
        <button
          className="sign-up-button"
          name="sign-up-button"
          onClick={[Function]}
        >
          signup
        </button>,
        <section
          className="login-social-wrapper"
        >
          <i
            className="fab fa-facebook login-social"
          />
          <i
            className="fab fa-twitter login-social"
          />
        </section>,
        <Link
          replace={false}
          to="/movies"
        >
          <button
            className="skip-login"
          >
            skip login
          </button>
        </Link>,
        <div
          className="login-error-wrapper "
        >
          <p
            className="login-error-text"
          >
            incorrect email/password combination
          </p>
        </div>,
      ],
      "className": "login-form ",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span>
              movie
            </span>,
            "Tracker",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "movie",
            },
            "ref": null,
            "rendered": "movie",
            "type": "span",
          },
          "Tracker",
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "for the love of film",
        },
        "ref": null,
        "rendered": "for the love of film",
        "type": "h4",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Logo />,
          "className": "login-form-logo-wrapper",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "email-input",
          "name": "email",
          "onChange": [Function],
          "placeholder": "email",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "mail",
          "className": "email-icon",
          "src": "./email.png",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "password-input",
          "name": "password",
          "onChange": [Function],
          "placeholder": "password",
          "type": "password",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "lock",
          "className": "password-icon",
          "src": "./password.png",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "login-submit",
          "type": "submit",
          "value": "login",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "signup",
          "className": "sign-up-button",
          "name": "sign-up-button",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "signup",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              className="fab fa-facebook login-social"
            />,
            <i
              className="fab fa-twitter login-social"
            />,
          ],
          "className": "login-social-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fab fa-facebook login-social",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fab fa-twitter login-social",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
        ],
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button
            className="skip-login"
          >
            skip login
          </button>,
          "replace": false,
          "to": "/movies",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "skip login",
            "className": "skip-login",
          },
          "ref": null,
          "rendered": "skip login",
          "type": "button",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p
            className="login-error-text"
          >
            incorrect email/password combination
          </p>,
          "className": "login-error-wrapper ",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "incorrect email/password combination",
            "className": "login-error-text",
          },
          "ref": null,
          "rendered": "incorrect email/password combination",
          "type": "p",
        },
        "type": "div",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            <span>
              movie
            </span>
            Tracker
          </h1>,
          <h4>
            for the love of film
          </h4>,
          <div
            className="login-form-logo-wrapper"
          >
            <Logo />
          </div>,
          <input
            className="email-input"
            name="email"
            onChange={[Function]}
            placeholder="email"
            value=""
          />,
          <img
            alt="mail"
            className="email-icon"
            src="./email.png"
          />,
          <input
            className="password-input"
            name="password"
            onChange={[Function]}
            placeholder="password"
            type="password"
            value=""
          />,
          <img
            alt="lock"
            className="password-icon"
            src="./password.png"
          />,
          <input
            className="login-submit"
            type="submit"
            value="login"
          />,
          <button
            className="sign-up-button"
            name="sign-up-button"
            onClick={[Function]}
          >
            signup
          </button>,
          <section
            className="login-social-wrapper"
          >
            <i
              className="fab fa-facebook login-social"
            />
            <i
              className="fab fa-twitter login-social"
            />
          </section>,
          <Link
            replace={false}
            to="/movies"
          >
            <button
              className="skip-login"
            >
              skip login
            </button>
          </Link>,
          <div
            className="login-error-wrapper "
          >
            <p
              className="login-error-text"
            >
              incorrect email/password combination
            </p>
          </div>,
        ],
        "className": "login-form ",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span>
                movie
              </span>,
              "Tracker",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "movie",
              },
              "ref": null,
              "rendered": "movie",
              "type": "span",
            },
            "Tracker",
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "for the love of film",
          },
          "ref": null,
          "rendered": "for the love of film",
          "type": "h4",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Logo />,
            "className": "login-form-logo-wrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "email-input",
            "name": "email",
            "onChange": [Function],
            "placeholder": "email",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "mail",
            "className": "email-icon",
            "src": "./email.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "password-input",
            "name": "password",
            "onChange": [Function],
            "placeholder": "password",
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "lock",
            "className": "password-icon",
            "src": "./password.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "login-submit",
            "type": "submit",
            "value": "login",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "signup",
            "className": "sign-up-button",
            "name": "sign-up-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "signup",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="fab fa-facebook login-social"
              />,
              <i
                className="fab fa-twitter login-social"
              />,
            ],
            "className": "login-social-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fab fa-facebook login-social",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fab fa-twitter login-social",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
          ],
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button
              className="skip-login"
            >
              skip login
            </button>,
            "replace": false,
            "to": "/movies",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "skip login",
              "className": "skip-login",
            },
            "ref": null,
            "rendered": "skip login",
            "type": "button",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p
              className="login-error-text"
            >
              incorrect email/password combination
            </p>,
            "className": "login-error-wrapper ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "incorrect email/password combination",
              "className": "login-error-text",
            },
            "ref": null,
            "rendered": "incorrect email/password combination",
            "type": "p",
          },
          "type": "div",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
